name: pipx

on: workflow_dispatch

jobs:
  build:
    name: Build pipx executable
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            package: cargo-zigbuild
            tool: zigbuild
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            package: cargo-zigbuild
            tool: zigbuild
          - os: ubuntu-latest
            target: aarch64-apple-darwin
            package: cargo-zigbuild
            tool: zigbuild
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            tool: build

    defaults:
      run:
        shell: nu {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ofek/pyapp

      - name: Setup nu
        uses: hustcer/setup-nu@v3

      - name: Setup rust
        run: |
          rustup update
          rustup target add ${{ matrix.target }}

      - name: Setup tool
        if: matrix.package != ''
        run: cargo install --locked ${{ matrix.package }}

      - name: Install zig
        if: matrix.package == 'cargo-zigbuild'
        uses: goto-bus-stop/setup-zig@v2

      - name: Build
        run: cargo ${{ matrix.tool }} --target ${{ matrix.target }} --release
        env:
          PYAPP_PROJECT_NAME: pipx
          PYAPP_PROJECT_VERSION: 1.7.0
          PYAPP_EXEC_SPEC: pipx.main:cli

      - name: Rename
        run: |
          try { cp target/release/pyapp ./pipx }
          try { cp target/release/pyapp.exe ./pipx.exe }
          try { cp target/${{ matrix.target }}/release/pyapp ./pipx }
          try { cp target/${{ matrix.target }}/release/pyapp.exe ./pipx.exe }

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: |
            pipx
            pipx.exe
